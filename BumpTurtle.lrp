;Turtlebot simple sweep
;* Go Straight forward until hit with a wall
;* When hit a wall, go back first then change direction and go forward again
;* Repeat until the end of time
 
;Representation of services of the robot itself
(var motor := /base/motor)  
(var bumper := /base/bumper) 


(machine sweeper 
	(state forward
		(onentry [motor forward])
		(onexit [motor stop])
	)

	(state bumped
	    ; we could use the same name as the state that represent this machine
		(machine bumped 
			
			(state backward 
			    (onentry [motor backward])
			    (onexit [motor stop])
			    
			(state turn
                ;rotate a bit more than 90Â°
				(onentry [
				    ;0 left
				    ;1 front
				    ;2 right
                    
                    (var angle_rotation := pi/2 + 1)
				    (if  ((bumper state) == 2)
				        (angle_rotation := angle_rotation * -1))
				         
				    (motor rotate angle_rotation)
				])
				(onexit  [motor stop]))
				
			; 1 second
			(ontime 1 backward -> turn t-turn)
		)
		
		;spawn the lookalgo machine, start in the lookleft state
		(onentry [machine spawn: bumped in: backward])
		(onexit [motor stop])
	)
	
	(eps bumped -> forward t-continue)
	(on bumping *-> bumped t-bumped)
	
	(event bumping [bumper isPressed])
)

;GO! 
[machine spawn: sweeper in: forward]
